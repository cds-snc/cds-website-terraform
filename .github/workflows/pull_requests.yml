name: "Pull requests"

on:
  pull_request:
    paths:
      - "components/**"
      - "terragrunt/**"
      - ".github/workflows/**"

defaults:
  run:
    shell: bash

env:
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 1.6.1
  TERRAGRUNT_VERSION: 0.52.2
  TF_VAR_rds_cluster_password: ${{ secrets.RDS_CLUSTER_PASSWORD }}
  TF_VAR_asset_bucket_name: ${{ secrets.ASSET_BUCKET_NAME }}
  TF_VAR_strapi_admin_jwt_secret: ${{ secrets.STRAPI_ADMIN_JWT_SECRET }}
  TF_VAR_strapi_api_token_salt: ${{ secrets.STRAPI_API_TOKEN_SALT }}
  TF_VAR_github_token: ${{ secrets.TOKEN }}
  TF_INPUT: false

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terraform-plan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - uses: dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721 # v2.10.2
        id: filter
        with:
          filters: |
            common:
              - '.github/workflows/pull_requests.yml'
              - 'terragrunt/terragrunt.hcl'
            website-cms:
              - 'components/website-cms/**'
              - 'terragrunt/website-cms/**'

      - name: configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::773858180673:role/gh_plan_role
          role-session-name: TFPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Terragrunt plan website-cms
        if: steps.filter.outputs.website-cms == 'true' || steps.filter.outputs.common == 'true'
        uses: cds-snc/terraform-plan@v3
        with:
          directory: "terragrunt/website-cms"
          comment-delete: "true"
          comment-title: "Website CMS"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
